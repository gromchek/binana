#include <idc.idc>

static import_data_types() {
  apply_type(0x00408070, "void __stdcall func(float* minX, float* maxX, float* minY, float* maxY, float* minZ, float* maxZ)");
  apply_type(0x004804F0, "void __cdecl func(EvtContext* context, EVENTID id, void* handler, void* param, float priority)");
  apply_type(0x004806A0, "int32_t __cdecl func(EvtContext* context, EVENTID id, void *data, size_t bytes)");
  apply_type(0x004B5510, "int32_t __stdcall func(uint32_t width, uint32_t height)");
  apply_type(0x004B7220, "MipBits* __stdcall func(PIXEL_FORMAT format, uint32_t width, uint32_t height)");
  apply_type(0x004B7300, "void func(MipBits* image)");
  apply_type(0x004B78A0, "int32_t __usercall func@<eax>(char* ext@<eax>, char* filename, int32_t a3, MipBits** mipBits, uint32_t* width, uint32_t* height, PIXEL_FORMAT* texFormat, int32_t* isOpaque@<ecx>, uint32_t* alphaBits, PIXEL_FORMAT* dataFormat)");
  apply_type(0x004B8070, "int32_t __usercall func@<eax>(char* ext@<eax>, char* filename@<ebx>, int32_t a3, MipBits** mipBits, uint32_t* width, uint32_t* height, uint32_t* isOpaque, uint32_t* alphaBits, PIXEL_FORMAT* dataFormat)");
  apply_type(0x004B81D0, "MipBits* func(const char* filename, uint32_t* width, uint32_t* height, PIXEL_FORMAT* dataFormat, int32_t* isOpaque, CStatus* status, uint32_t* alphaBits, int32_t a8)");
  apply_type(0x006160B0, "int32_t __usercall func@<eax>(uint32_t** image@<eax>, MipBits* mipImages@<ecx>, uint32_t width@<edx>, uint32_t height)");
  apply_type(0x00616800, "void __stdcall func(CURSORMODE mode)");
  apply_type(0x00681F60, "void __stdcall func(float minX, float maxX, float minY, float maxY, float minZ, float maxZ)");
  apply_type(0x00682DC0, "int32_t __thiscall func(CGxDevice* this, int32_t a2)");
  apply_type(0x00682E20, "int32_t __thiscall func(CGxDevice* this, int32_t a2)");
  apply_type(0x006853B0, "void __thiscall func(CGxDevice* this, DEVICERESTOREDCALLBACK fn)");
  apply_type(0x006853D0, "int32_t __thiscall func(CGxDevice* this, DEVICERESTOREDCALLBACK fn)");
  apply_type(0x00685460, "void __thiscall func(CGxDevice* this, TEXTURERECREATIONCALLBACK fn)");
  apply_type(0x00685480, "int32_t __thiscall func(CGxDevice* this, TEXTURERECREATIONCALLBACK fn)");
  apply_type(0x00685510, "void __thiscall func(CGxDevice* this, DISPLAYCHANGECALLBACK fn)");
  apply_type(0x00685530, "int32_t __thiscall func(CGxDevice* this, DISPLAYCHANGECALLBACK fn)");
  apply_type(0x006A5A30, "void __thiscall func(CGxDeviceD3d* this)");
  apply_type(0x006AA3B0, "int32_t __thiscall func(CTgaFile* this)");
  apply_type(0x006AA3E0, "uint32_t __thiscall func(CTgaFile* this)");
  apply_type(0x006AA420, "void __thiscall func(CTgaFile* this, uint8_t* pAlphaData, uint8_t* pNoAlphaData, uint8_t* alpha)");
  apply_type(0x006AA630, "int32_t __thiscall func(CTgaFile* this, uint8_t* pRLEData, uint8_t* pData)");
  apply_type(0x006AA700, "void __thiscall func(CTgaFile* this, int32_t set)");
  apply_type(0x006AA840, "TGA32Pixel* __thiscall func(CTgaFile* this)");
  apply_type(0x006AA870, "int32_t __thiscall func(CTgaFile* this)");
  apply_type(0x006AAF40, "int32_t __thiscall func(CTgaFile* this)");
  apply_type(0x006AAFB0, "int32_t __thiscall func(CTgaFile* this, char* filename, int32_t a3)");
  apply_type(0x006AB390, "int32_t __thiscall func(CTgaFile* this, void* pImg)");
  apply_type(0x006AB4B0, "int32_t __thiscall func(CTgaFile* this, int32_t flags)");
  apply_type(0x006AB620, "uint32_t __cdecl func(uint32_t level, uint32_t width, uint32_t height, uint32_t fourCC)");
  apply_type(0x006AB700, "uint32_t __stdcall func(uint32_t width, uint32_t height)");
  apply_type(0x006AB760, "MipBits* __stdcall func(uint32_t fourCC, uint32_t width, uint32_t height, char* filename, int32_t linenumber)");
  apply_type(0x006AB810, "void __stdcall func(uint32_t fourCC, uint32_t width, uint32_t height, MipBits* bits)");
  apply_type(0x006AB860, "void _stdcall func(C4Pixel* dest, uint32_t destWidth, uint32_t destHeight, C4Pixel* source, uint32_t sourceWidth, uint32_t sourceHeight)");
  apply_type(0x006AE8B0, "void __thiscall func(CBLPFile* this)");
  apply_type(0x006AE900, "int32_t __thiscall func(CBLPFile* this, void* fileBits)");
  apply_type(0x006AE990, "void __thiscall func(CBLPFile* this, uint8_t* data, void* tempbuffer, uint32_t colorSize)");
  apply_type(0x006AE9E0, "void __thiscall func(CBLPFile* this, uint8_t* data, void* tempbuffer, uint32_t colorSize)");
  apply_type(0x006AEBA0, "void __thiscall func(CBLPFile* this, uint8_t* data, void* tempbuffer, uint32_t width, uint32_t height)");
  apply_type(0x006AEE70, "void __thiscall func(CBLPFile* this, uint8_t* data, void* tempbuffer, uint32_t width, uint32_t height)");
  apply_type(0x006AF140, "void __thiscall func(CBLPFile* this, uint8_t* data, void* tempbuffer, uint32_t width, uint32_t height)");
  apply_type(0x006AF340, "void __thiscall func(CBLPFile* this, uint8_t* data, void* tempbuffer, uint32_t width, uint32_t height)");
  apply_type(0x006AF6A0, "uint32_t __thiscall func(CBLPFile* this, uint32_t mipLevel)");
  apply_type(0x006AF730, "int32_t __thiscall func(CBLPFile *this, PIXEL_FORMAT format, uint32_t mipLevel, uint32_t* size, uint32_t* stride)");
  apply_type(0x006AF810, "int32_t __thiscall func(CBLPFile* this, PIXEL_FORMAT format, uint32_t mipLevel, uint8_t* data, void* tempBuffer)");
  apply_type(0x006AFCE0, "int32_t __thiscall func(CBLPFile* this, char* fileName, PIXEL_FORMAT format, uint32_t mipLevel, unsigned char* data, uint32_t* stride)");
  apply_type(0x006AFF10, "int32_t __thiscall func(CBLPFile* this, char* filename)");
  apply_type(0x006AFFD0, "int32_t __thiscall func(CBLPFile* this, char* fileName, PIXEL_FORMAT format, MipBits** images, uint32_t mipLevel, int32_t a6)");
  apply_type(0x006BF4C0, "void __stdcall GxuXformCreateOrtho(float minX, float maxX, float minY, float maxY, float minZ, float maxZ, C44Matrix* dst)");
  apply_type(0x0076E540, "void* __stdcall func(uint32_t bytes, char* filename, int32_t linenumber, uint32_t flags)");
  apply_type(0x0076E5A0, "int32_t __stdcall func(void* ptr, char* filename, int32_t linenumber, uint32_t flags)");
  apply_type(0x0076E5E0, "void* __stdcall func(void* ptr, uint32_t bytes, char* filename, int32_t linenumber, uint32_t flags)");
  apply_type(0x0076F070, "int32_t __stdcall func(char* dest, size_t maxchars, char* format, ...)");
  apply_type(0x00774620, "SCritSect* __thiscall func(SCritSect* this)");
  apply_type(0x00774630, "void __thiscall func(SCritSect *this)");
  apply_type(0x00774640, "void __thiscall func(SCritSect *this)");
  apply_type(0x00774650, "void __thiscall func(SCritSect *this)");
  apply_type(0x00777420, "void __stdcall func(HSRGN handle, RECTF* rect, void* param, int32_t combinemode)");
  apply_type(0x00777590, "void __stdcall func(HSRGN handle, RECTF* rect)");
  apply_type(0x00819EA0, "void __stdcall func(int32_t function, FrameScript_Object* object, int32_t args, char* args_fmt, FrameScript_EventObject* eventObject)");
  apply_type(0x00A2DDC0, "CGxDevice__vtable");
  apply_type(0x00AC1B9C, "TSExplicitList_CILayer");
  apply_type(0x00AD2808, "char*[53]");
  apply_type(0x00AD90B0, "uint8_t[16]");
  apply_type(0x00AD90C0, "uint8_t[2]");
  apply_type(0x00B417C8, "uint32_t");
  apply_type(0x00B417D0, "int32_t");
  apply_type(0x00B41850, "CDataRecycler");
  apply_type(0x00B6A9DC, "MipBits*");
  apply_type(0x00C25CD0, "int8_t");
  apply_type(0x00C25DE8, "uint32_t[1024]");
  apply_type(0x00C26DE8, "CURSORMODE");
  apply_type(0x00C26DF0, "uint32_t[53][1024]");
  apply_type(0x00C5DF88, "CGxDevice*");
}
